name: Piler build

on:
  push:

env:
  IMAGE_NAME: sutoj/piler
  DISTRO: jammy
  PROJECT_ID: piler
  ARCH: amd64

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      IMAGE_TAG: ${{ steps.generate-version.outputs.IMAGE_TAG }}
      PACKAGE: ${{ steps.build-package.outputs.PACKAGE }}

    steps:
      - uses: actions/checkout@v4

      - name: Set version tag
        id: generate-version
        run: |
          read -r VERSION < VERSION
          COMMIT_ID="$( git rev-parse --short HEAD )"
          IMAGE_TAG="${VERSION}-${COMMIT_ID}"

          echo "image tag: $IMAGE_TAG"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "COMMIT_ID=$COMMIT_ID" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        shell: bash

      - name: Build package
        id: build-package
        run: |
          docker run --rm -e PROJECT_ID -e DISTRO -e ARCH -e VERSION -e COMMIT_ID -e BUILD_NUMBER=$GITHUB_RUN_ID -v $PWD:/repo -v $PWD/docker:/data sutoj/builder:0.1
          ls -la docker
          a="$(ls docker/*deb)"
          PACKAGE="${a##*/}"
          echo "PACKAGE=$PACKAGE" >> $GITHUB_OUTPUT
          echo "Image candidate: ${IMAGE_NAME}:${IMAGE_TAG}"
          echo "Package: ${PACKAGE}"
        shell: bash

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: docker/*deb
          retention-days: 1

  publish:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: package
          path: docker

      - uses: geekyeggo/delete-artifact@v5
        with:
          name: package

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: docker
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ needs.build.outputs.IMAGE_TAG }}
          build-args: |
            PACKAGE=${{ needs.build.outputs.PACKAGE }}
